root = true

# noinspection EditorConfigKeyCorrectness
[*]
indent_style = space
indent_size = 2
tab_width = 2
end_of_line = crlf
trim_trailing_whitespace = true
insert_final_newline = false
charset = utf-8

# noinspection EditorConfigKeyCorrectness
[*.cs]
indent_size = 4
tab_width = 4
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_namespace_match_folder = true:error
csharp_space_after_cast = false
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = true:error
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:error
csharp_prefer_simple_using_statement = true:error
csharp_prefer_braces = false:error
csharp_new_line_before_members_in_object_initializers = true
csharp_style_namespace_declarations = file_scoped:error
dotnet_style_prefer_conditional_expression_over_return = false
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_constructors = true
csharp_style_expression_bodied_methods = true
csharp_style_implicit_object_creation_when_type_is_apparent = true

# Microsoft .NET properties
csharp_preserve_single_line_blocks = true
csharp_style_prefer_utf8_string_literals = true:suggestion
dotnet_naming_rule.unity_serialized_field_rule.import_to_resharper = True
dotnet_naming_rule.unity_serialized_field_rule.resharper_description = Unity serialized field
dotnet_naming_rule.unity_serialized_field_rule.resharper_guid = 5f0fdb63-c892-4d2c-9324-15c80b22a7ef
dotnet_naming_rule.unity_serialized_field_rule.severity = warning
dotnet_naming_rule.unity_serialized_field_rule.style = lower_camel_case_style
dotnet_naming_rule.unity_serialized_field_rule.symbols = unity_serialized_field_symbols
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_accessibilities = *
dotnet_naming_symbols.unity_serialized_field_symbols.applicable_kinds =
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_applicable_kinds = unity_serialised_field
dotnet_naming_symbols.unity_serialized_field_symbols.resharper_required_modifiers = instance
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# ReSharper alignments
resharper_align_linq_query = true
resharper_csharp_int_align_comments = true
resharper_csharp_int_align_fix_in_adjacent = true
resharper_int_align = true
resharper_int_align_assignments = true
resharper_int_align_binary_expressions = false
resharper_int_align_fields = false
resharper_int_align_invocations = false
resharper_int_align_methods = false
resharper_int_align_nested_ternary = true
resharper_int_align_parameters = false
resharper_int_align_properties = false
resharper_int_align_property_patterns = true
resharper_int_align_switch_expressions = true
resharper_int_align_switch_sections = true
resharper_int_align_variables = true

# ReSharper properties
resharper_braces_for_dowhile = required_for_multiline
resharper_braces_for_fixed = required_for_multiline
resharper_braces_for_for = required_for_multiline
resharper_braces_for_foreach = required_for_multiline
resharper_braces_for_ifelse = required_for_multiline
resharper_braces_for_lock = required_for_multiline
resharper_braces_for_using = required_for_multiline
resharper_braces_for_while = required_for_multiline
resharper_constructor_or_destructor_body = expression_body
resharper_csharp_align_multiline_calls_chain = true
resharper_csharp_blank_lines_around_invocable = 1
resharper_csharp_empty_block_style = together_same_line
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_keep_existing_attribute_arrangement = false
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_linebreaks = false
resharper_keep_existing_declaration_block_arrangement = false
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_enum_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_initializer_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_list_patterns_arrangement = false
resharper_keep_existing_property_patterns_arrangement = false
resharper_keep_existing_switch_expression_arrangement = false
resharper_local_function_body = expression_body
resharper_max_formal_parameters_on_line = 3
resharper_max_invocation_arguments_on_line = 5
resharper_max_initializer_elements_on_line = 1
resharper_method_or_operator_body = expression_body
resharper_parentheses_redundancy_style = remove
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_constructor_initializer_on_same_line = false
resharper_place_expr_method_on_single_line = if_owner_is_single_line #true
resharper_place_expr_property_on_single_line = if_owner_is_single_line
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_place_simple_switch_expression_on_single_line = true
resharper_use_continuous_indent_inside_parens = false
resharper_space_within_single_line_array_initializer_braces = true
resharper_wrap_after_declaration_lpar = true
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_before_arrow_with_expressions = true
resharper_wrap_before_binary_pattern_op = true
resharper_wrap_before_eq = false
resharper_wrap_before_extends_colon = true
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_chained_binary_patterns = chop_if_long
resharper_wrap_chained_method_calls = chop_if_long
resharper_wrap_parameters_style = wrap_if_long

# ReSharper inspection severities
resharper_arrange_attributes_highlighting = hint
resharper_arrange_constructor_or_destructor_body_highlighting = suggestion
resharper_arrange_default_value_when_type_not_evident_highlighting = suggestion
resharper_arrange_local_function_body_highlighting = suggestion
resharper_arrange_method_or_operator_body_highlighting = suggestion
resharper_arrange_object_creation_when_type_evident_highlighting = warning
resharper_arrange_object_creation_when_type_not_evident_highlighting = warning
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = suggestion
resharper_arrange_trailing_comma_in_singleline_lists_highlighting = suggestion
resharper_enforce_do_while_statement_braces_highlighting = suggestion
resharper_enforce_fixed_statement_braces_highlighting = suggestion
resharper_enforce_foreach_statement_braces_highlighting = suggestion
resharper_enforce_for_statement_braces_highlighting = suggestion
resharper_enforce_if_statement_braces_highlighting = suggestion
resharper_enforce_lock_statement_braces_highlighting = suggestion
resharper_enforce_using_statement_braces_highlighting = suggestion
resharper_enforce_while_statement_braces_highlighting = suggestion
resharper_remove_redundant_braces_highlighting = suggestion

# ReSharper properties
resharper_arguments_literal = named
resharper_arguments_skip_single = true
resharper_arguments_anonymous_function = positional
resharper_arguments_named = positional
resharper_arguments_other = named
resharper_arguments_string_literal = positional
resharper_autodetect_indent_settings = true
resharper_csharp_blank_lines_around_field = 0
resharper_csharp_max_line_length = 120
resharper_csharp_wrap_lines = true
resharper_csharp_wrap_ternary_expr_style = chop_always
resharper_enforce_line_ending_style = true
resharper_instance_members_qualify_declared_in = base_class
resharper_place_expr_accessor_on_single_line = true
resharper_place_record_field_attribute_on_same_line = false
resharper_place_simple_initializer_on_single_line = true
resharper_use_indent_from_vs = false
resharper_wrap_after_invocation_lpar = true
resharper_wrap_object_and_collection_initializer_style = wrap_if_long

# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# Disable Formatting rule for spaces
dotnet_diagnostic.ide0055.severity = none
# Disable the rule "Remove unused expression value" as it forces you to either use a discard or assign to an unused var. (see: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058#csharp_style_unused_value_expression_statement_preference)
dotnet_diagnostic.ide0058.severity = none
# Disable the rule "Add missing cases to switch expression". It is not properly handled in cases you actually cover those cases with a conditional statement. See case in "MapFromProjectListStatusToProjectStatus.cs"
dotnet_diagnostic.ide0072.severity = none
# Disable the rule "Use block body for methods".
# dotnet_diagnostic.ide0022.severity = none -> csharp_style_expression_bodied_methods = true
# dotnet_diagnostic.ide0023.severity = none -> csharp_style_expression_bodied_operators = true
# Disable warnings for missing XML comments
dotnet_diagnostic.cs1591.severity = none

dotnet_analyzer_diagnostic.category-style.severity = error


### Wishlist ###
# Long naming for tests shouldn't be wrapped as already exceed max line lenght. Check if disable this rule only for tests.
